{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kevin\\\\Documents\\\\Projects\\\\CAPSTONE-CLIENT-COPY\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Router, withRouter, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport { createBrowserHistory } from 'history';\nimport Welcome from \"./Welcome\";\nimport Header from \"./Header\";\nimport CreateProfile from \"./CreateProfile\";\nimport ArtistSearch from \"./ArtistSearch\";\nimport SearchCity from \"./SearchCity\";\nimport NavBar from \"./NavBar\";\nimport Profile from \"./Profile\";\nimport EditProfile from \"./EditProfile\";\nimport \"./App.css\";\nimport LoginForm from \"./LoginForm\"; //import profiles from \"./ArtistData\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst history = createBrowserHistory();\nconst profiles = [];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addProfile = this.addProfile.bind(this);\n    this.updateProfile = this.updateProfile.bind(this);\n    this.state = {\n      profiles: profiles.map(profile => ({ ...profile,\n        recommendations: [],\n        bucketList: []\n      })),\n      userId: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8000/profiles').then(response => response.json()).then(profiles => {\n      console.log(profiles);\n      this.setState({\n        profiles\n      });\n    });\n  }\n\n  addProfile(profile) {\n    this.setState({\n      profiles: [...this.state.profiles, { ...profile,\n        bucketList: [],\n        recommendations: []\n      }],\n      userId: profile.id,\n      bucketList: [],\n      recommendations: []\n    }, () => history.push(\"/profile/\"));\n  }\n\n  updateProfile(profile) {\n    console.log(profile);\n    const otherProfiles = this.state.profiles.filter(p => p.id !== profile.id);\n    console.log(this.state.profiles);\n    this.setState({\n      profiles: [...otherProfiles, profile]\n    });\n    console.log(this.state.profiles);\n  }\n\n  render() {\n    const loggedInUser = this.state.profiles.find(p => p.id === this.state.userId);\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          history: history,\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: Welcome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/createprofile\",\n            render: props => /*#__PURE__*/_jsxDEV(CreateProfile, {\n              addProfile: this.addProfile,\n              ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            render: () => loggedInUser ? /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this) : /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/artistsearch\",\n            render: props => /*#__PURE__*/_jsxDEV(ArtistSearch, {\n              profiles: this.state.profiles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/searchcity\",\n            render: props => /*#__PURE__*/_jsxDEV(SearchCity, {\n              profile: loggedInUser,\n              updateProfile: this.updateProfile,\n              addBucketListItem: this.addBucketListItem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/profile/:id?\",\n            render: props => {\n              const profile = this.state.profiles.find(p => p.id === (Number(props.match.params.id) || this.state.userId));\n              console.log(profile);\n              return /*#__PURE__*/_jsxDEV(Profile, {\n                addProfile: this.addProfile,\n                addRecommendation: this.addRecommendation,\n                addBucketListItem: this.addBucketListItem,\n                updateProfile: this.updateProfile,\n                profile: profile,\n                userId: this.state.userId,\n                recommendations: this.recommendations,\n                bucketList: this.bucketList,\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/editprofile\",\n            render: props => {\n              const profile = this.state.profiles.find(p => p.id === this.state.userId);\n              return /*#__PURE__*/_jsxDEV(EditProfile, {\n                updateProfile: this.updateProfile,\n                profile: profile,\n                ...props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/Kevin/Documents/Projects/CAPSTONE-CLIENT-COPY/src/App.js"],"names":["React","Router","withRouter","Switch","Route","Link","Redirect","createBrowserHistory","Welcome","Header","CreateProfile","ArtistSearch","SearchCity","NavBar","Profile","EditProfile","LoginForm","history","profiles","App","Component","constructor","props","addProfile","bind","updateProfile","state","map","profile","recommendations","bucketList","userId","componentDidMount","fetch","then","response","json","console","log","setState","id","push","otherProfiles","filter","p","render","loggedInUser","find","addBucketListItem","Number","match","params","addRecommendation"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Router, withRouter, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport { createBrowserHistory } from 'history';\nimport Welcome from \"./Welcome\";\nimport Header from \"./Header\";\nimport CreateProfile from \"./CreateProfile\";\nimport ArtistSearch from \"./ArtistSearch\";\nimport SearchCity from \"./SearchCity\";\nimport NavBar from \"./NavBar\";\nimport Profile from \"./Profile\";\nimport EditProfile from \"./EditProfile\";\nimport \"./App.css\";\nimport LoginForm from \"./LoginForm\"\n//import profiles from \"./ArtistData\";\n\nconst history = createBrowserHistory();\nconst profiles = []\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addProfile = this.addProfile.bind(this);\n    this.updateProfile = this.updateProfile.bind(this);\n\n    this.state = {\n     \n      profiles: profiles.map((profile) => ({\n        ...profile,\n        recommendations: [],\n        bucketList: [],\n      })),\n      userId: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8000/profiles')\n      .then(response => response.json())\n      .then(profiles => {\n        console.log(profiles);\n        this.setState({ profiles })\n      });\n  }\n\n  addProfile(profile) {\n    this.setState({\n      profiles: [...this.state.profiles, { ...profile, bucketList: [], recommendations: [] } ],\n      userId: profile.id,\n      bucketList: [],\n      recommendations: []\n\n    }, () => history.push(\"/profile/\"));\n  }\n\n  updateProfile(profile) {\n    console.log(profile)\n    const otherProfiles = this.state.profiles.filter(\n      (p) => p.id !== profile.id\n      \n      \n    );\n    console.log(this.state.profiles)\n    this.setState({\n      profiles: [...otherProfiles, profile],\n      \n    });\n    console.log(this.state.profiles)\n  }\n\n  render() {\n    \n    const loggedInUser = this.state.profiles.find(\n      (p) => p.id === this.state.userId\n    );\n    return (\n      <main className=\"App\">\n        <div>\n          <Router history={history}>\n            <Header />\n            <NavBar />\n\n            <Route exact path=\"/\" component={Welcome} />\n            <Route\n              exact\n              path=\"/createprofile\"\n              render={(props) => (\n                <CreateProfile addProfile={this.addProfile} {...props} />\n              )}\n            />\n            \n            <Route \n              exact\n              path=\"/login\"\n              render={() => loggedInUser ? \n              <Redirect to=\"/profile\" /> : \n              <LoginForm />}\n               \n\n            />  \n            <Route\n              exact\n              path=\"/artistsearch\"\n              render={(props) => (\n                <ArtistSearch profiles={this.state.profiles} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/searchcity\"\n              render={(props) => (\n                <SearchCity\n                  profile={loggedInUser}\n                  updateProfile={this.updateProfile}\n                  addBucketListItem={this.addBucketListItem}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/profile/:id?\"\n              render={(props) => {\n                const profile = this.state.profiles.find(\n                  (p) => p.id === (Number(props.match.params.id) || this.state.userId),\n                  \n                );\n                console.log(profile);\n                return (\n                  <Profile\n                    addProfile={this.addProfile}\n                    addRecommendation={this.addRecommendation}\n                    addBucketListItem={this.addBucketListItem}\n                    updateProfile={this.updateProfile}\n                    profile={profile}\n                    userId={this.state.userId}\n                    recommendations={this.recommendations}\n                    bucketList={this.bucketList}\n                    \n                    {...props}\n                  />\n                );\n              }}\n            />\n            <Route\n              exact\n              path=\"/editprofile\"\n              render={(props) => {\n                const profile = this.state.profiles.find(\n                  (p) => p.id === this.state.userId\n                );\n\n                return (\n                  <EditProfile\n                    updateProfile={this.updateProfile}\n                    profile={profile}\n                    {...props}\n                  />\n                );\n              }}\n            />\n          </Router>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}