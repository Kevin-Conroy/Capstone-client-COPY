{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kevin\\\\Documents\\\\Projects\\\\CAPSTONE-CLIENT-COPY\\\\src\\\\LoginForm.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  updateUsername(username) {\n    this.setState({\n      username\n    });\n  }\n\n  updatePassword(password) {\n    this.setState({\n      password\n    });\n  }\n\n  async handleLogin(event) {\n    if (!this.state.username || !this.state.password) {\n      alert(\"Username & password are required\");\n    } else {\n      if (this.state.username.length < 6 || this.state.password.length < 6) {\n        alert(\"Username & Password must be atleast 6 character\");\n      } else {\n        const url = 'http://localhost:8000/login/username/passsword';\n        const options = {\n          method: 'POST',\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            username: this.state.username,\n            password: this.state.password\n          })\n        };\n\n        try {\n          var token = await fetch(url, options).then(a => a.json()); // console.log(token.id,\"asdf\");\n\n          if (token == '200' || token == \"400\") alert(\"Wrong username or password... please check!!!\");else {\n            sessionStorage.setItem(\"tokenses\", token.token);\n            sessionStorage.setItem(\"loginid\", token.id);\n          }\n        } catch (e) {\n          alert(e);\n        }\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        value: this.state.username,\n        onChange: event => this.updateUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"text\",\n        id: \"password\",\n        value: this.state.password,\n        onChange: event => this.updatePassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: this.handleLogin.bind(this),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/Kevin/Documents/Projects/CAPSTONE-CLIENT-COPY/src/LoginForm.js"],"names":["React","LoginForm","Component","constructor","props","state","username","password","updateUsername","setState","updatePassword","handleLogin","event","alert","length","url","options","method","headers","body","JSON","stringify","token","fetch","then","a","json","sessionStorage","setItem","id","e","render","target","value","bind"],"mappings":"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","sourcesContent":["import React from \"react\"\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        username: \"\",\r\n        password: \"\"\r\n      };\r\n    }\r\n\r\n    updateUsername(username) {\r\n      this.setState({ username });\r\n    }\r\n  \r\n    updatePassword(password) {\r\n      this.setState({ password });\r\n    }\r\n  \r\n    async handleLogin(event) {\r\n       \r\n    if (!this.state.username || !this.state.password) {\r\n              alert(\"Username & password are required\");\r\n              } else {\r\n                if(this.state.username.length<6 || this.state.password.length<6){\r\n                  alert(\"Username & Password must be atleast 6 character\")\r\n                }else{\r\n                  const url ='http://localhost:8000/login/username/passsword';\r\n                  const options = {\r\n                      method: 'POST',\r\n                         \r\n                \r\n                      headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                      },\r\n                      body:JSON.stringify({\r\n                        username:this.state.username,\r\n                        password:this.state.password,\r\n                      })\r\n                    };\r\n                    try{\r\n                   var token= await fetch(url, options).then(a=>a.json())\r\n                  // console.log(token.id,\"asdf\");\r\n                  if(token == '200'|| token==\"400\")\r\n                  alert(\"Wrong username or password... please check!!!\");\r\n                  else{\r\n                   sessionStorage.setItem(\"tokenses\", token.token);\r\n                   sessionStorage.setItem(\"loginid\", token.id);\r\n                  }\r\n                    }catch(e){\r\n                      alert (e);\r\n                    }\r\n                }\r\n              }\r\n\r\n\r\n\r\n\r\n               }\r\n         \r\n        \r\n     \r\n   render() {\r\n      return (\r\n        <form>\r\n          <label>Username:</label>\r\n          <input\r\n            type=\"text\" \r\n            id=\"username\"\r\n            value={this.state.username}\r\n            onChange={(event) => this.updateUsername(event.target.value)}\r\n          />\r\n          <br></br>\r\n          <label>Password:</label>\r\n          <input required\r\n            type=\"text\"\r\n            id=\"password\"\r\n            value={this.state.password}\r\n            onChange={(event) => this.updatePassword(event.target.value)}\r\n          ></input>\r\n          <br></br>\r\n          \r\n          <br></br>\r\n  \r\n          <button type=\"submit\" onClick={this.handleLogin.bind(this)}>\r\n            Submit\r\n          </button>\r\n        </form>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}